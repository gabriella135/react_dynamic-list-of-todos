{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","listOfTodos","selectedTodo","selectTodo","className","map","todo","classNames","id","completed","title","type","onClick","handlerClickTodo","TodoFilter","setFilter","setSearchQuery","useState","isClearButton","setIsClearButton","onChange","event","target","value","placeholder","query","trim","style","pointerEvents","document","querySelector","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedTodo","currentUser","setCurrentUser","isLoading","setIsLoading","useEffect","userId","finally","handleCloseTodo","useCallback","href","email","name","App","setTodoList","filter","searchQuery","getTodoList","a","newTodoList","filteredTodos","toLowerCase","includes","filterTodos","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.306acfd5.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  listOfTodos: Todo[],\n  selectedTodo: Todo | null,\n  selectTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  listOfTodos,\n  selectedTodo,\n  selectTodo,\n}) => {\n  const handlerClickTodo = (todo: Todo) => {\n    return (\n      selectedTodo && selectedTodo.id === todo.id\n        ? selectTodo(null)\n        : selectTodo(todo)\n    );\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {listOfTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo\n              && selectedTodo.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handlerClickTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye-slash': selectedTodo\n                  && selectedTodo.id === todo.id,\n                    'far fa-eye': !selectedTodo\n                  || selectedTodo.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\n\ntype Props = {\n  setFilter: (todos: string) => void,\n  setSearchQuery: (todos: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, setSearchQuery,\n}) => {\n  const [isClearButton, setIsClearButton] = useState(false);\n  const handleFilterTodos = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const hadleSearchQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    const query = event.target.value;\n\n    setSearchQuery(query);\n    setIsClearButton(query.trim() !== '');\n  };\n\n  const clearSearchField = () => {\n    setSearchQuery('');\n    const searchInput = document\n      .querySelector('input[data-cy=searchInput]') as HTMLInputElement;\n\n    searchInput.value = '';\n    setIsClearButton(false);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterTodos}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={hadleSearchQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {isClearButton && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearchField}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  setSelectedTodo: (todo: Todo | null) => void,\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setCurrentUser)\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  const handleCloseTodo = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo ${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser?.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [listOfTodos, setTodoList] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const filterTodos = () => {\n    let filteredTodos: Todo[] = [...listOfTodos];\n\n    if (filter !== 'all') {\n      filteredTodos = filteredTodos.filter(todo => {\n        return (\n          filter === 'completed'\n            ? todo.completed\n            : !todo.completed\n        );\n      });\n    }\n\n    if (searchQuery.trim() !== '') {\n      filteredTodos = filteredTodos.filter(todo => (\n        todo.title.toLowerCase().includes(searchQuery.toLowerCase())\n      ));\n    }\n\n    return filteredTodos;\n  };\n\n  const getTodoList = async () => {\n    const newTodoList = await getTodos();\n\n    setTodoList(newTodoList);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getTodoList();\n  }, []);\n\n  const selectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  listOfTodos={filterTodos()}\n                  selectedTodo={selectedTodo}\n                  selectTodo={selectTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}